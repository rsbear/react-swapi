{"version":3,"file":"static/webpack/static/development/pages/index.js.02d8ea8ac9d18a17138d.hot-update.js","sources":["webpack:///./hooks/useTypeFilter.ts"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport {\n  useAllStarshipsQuery,\n  useAllFilmsQuery,\n  useAllPersonsQuery\n} from \"../generated/graphql\";\nimport { useRouter } from 'next/router'\n\nconst initState = {\n  isLoading: true,\n  browseType: \"films\",\n  mainList: [],\n  characterDropdownList: [],\n  starshipsDropdownList: [],\n  filterByCharacter: \"\",\n  filterByStarship: \"\",\n  error: \"\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"setLoading\":\n      return { ...state, isLoading: true };\n    case \"setBrowseType\":\n      return { ...state, browseType: action.payload };\n    case \"setMainList\":\n      return { ...state, mainList: action.payload, isLoading: false };\n    case \"characterDropdownList\":\n      return { ...state, characterDropdownList: action.payload };\n    case \"starshipsDropdownList\":\n      return { ...state, starshipsDropdownList: action.payload };\n    case \"setFilterByCharacter\":\n      return { ...state, filterByCharacter: action.payload };\n    case \"setFilterByStarship\":\n      return { ...state, filterByStarship: action.payload };\n    case \"error\":\n      return { ...state, error: \"Oops, something went wrong\" }\n    default:\n      return [];\n  }\n};\n\nexport const useTypeFilter = () => {\n  const [state, dispatch] = useReducer(reducer, initState);\n  const router = useRouter()\n  const films = useAllFilmsQuery();\n  const persons = useAllPersonsQuery();\n  const starships = useAllStarshipsQuery();\n\n  useEffect(() => {\n    let loading = persons.loading && starships.loading\n    let error = persons.error && starships.error\n    let data = persons.data && starships.data\n\n    if (loading) {\n      dispatch({ type: 'setLoading' })\n    }\n    if (error) {\n      dispatch({ type: 'error' })\n    }\n    if (data) {\n      let personsArr = persons.data.allPersons.map(p => p.name)\n      let starshipsArr = starships.data.allStarships.map(s => s.name)\n      dispatch({ type: \"characterDropdownList\", payload: personsArr })\n      dispatch({ type: \"starshipsDropdownList\", payload: starshipsArr })\n    }\n  }, [persons, starships])\n\n  useEffect(() => {\n    if (state.browseType === \"films\") {\n      if (films.loading) {\n        dispatch({ type: \"setLoading\" });\n      } else if (!films.error && films.data) {\n        dispatch({ type: \"setMainList\", payload: films.data.allFilms });\n      }\n    }\n  }, [films, state.browseType]);\n\n  useEffect(() => {\n    if (state.browseType === \"persons\") {\n      if (persons.loading) {\n        dispatch({ type: \"setLoading\" });\n      } else if (!persons.error && persons.data) {\n        dispatch({ type: \"setMainList\", payload: persons.data.allPersons });\n      }\n    }\n  }, [persons, state.browseType]);\n\n  useEffect(() => {\n    if (state.browseType === \"starships\") {\n      if (starships.loading) {\n        dispatch({ type: \"setLoading\" });\n      } else if (!starships.error && starships.data) {\n        dispatch({ type: \"setMainList\", payload: starships.data.allStarships });\n      }\n    }\n  }, [starships, state.browseType]);\n\n\n  useEffect(() => {\n    if (state.browseType === \"films\") {\n      if (!films.loading && !films.error) {\n        let newArr = []\n\n        films.data.allFilms.forEach((x) => {\n          const charMap = x.characters.map(c => c.name)\n          if (charMap.includes(state.filterByCharacter)) {\n            newArr.push(x)\n          }\n        })\n        dispatch({ type: 'setMainList', payload: newArr })\n      }\n    }\n  }, [state.filterByCharacter])\n\n  useEffect(() => {\n    if (state.browseType === \"films\") {\n      if (!films.loading && !films.error) {\n        let newArr = []\n\n        films.data.allFilms.forEach((x) => {\n          const shipMap = x.starships.map(c => c.name)\n          if (shipMap.includes(state.filterByStarship)) {\n            newArr.push(x)\n          }\n        })\n        dispatch({ type: 'setMainList', payload: newArr })\n      }\n    }\n  }, [state.filterByStarship])\n\n  useEffect(() => {\n    const test = router.query.browse\n    console.log(test)\n  }, [state.browseType])\n\n  const handleBrowse = (e) => {\n    e.preventDefault()\n    dispatch({ type: \"setBrowseType\", payload: e.target.value });\n    dispatch({ type: \"setMainList\", payload: [] });\n    router.push(`/?browse=${e.target.value}`, `/?browse=${e.target.value}`, { shallow: true });\n  }\n\n  const handleFilterByCharacter = e => {\n    e.preventDefault();\n    dispatch({ type: \"setFilterByCharacter\", payload: e.target.value });\n  };\n\n  const handleFilterByStarship = e => {\n    e.preventDefault();\n    dispatch({ type: \"setFilterByStarship\", payload: e.target.value });\n  };\n\n  const handlers = {\n    handleBrowse,\n    handleFilterByCharacter,\n    handleFilterByStarship\n  }\n\n  return [state, dispatch, handlers];\n};\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAlBA;AAosourceRoot":""}