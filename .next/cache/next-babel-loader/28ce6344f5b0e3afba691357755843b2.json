{"ast":null,"code":"var _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport withData from \"../HOC/withData\";\nimport Layout from \"../components/layouts/layout\";\nimport Item from \"../components/item\";\n\nconst Landing = ({\n  shortId\n}) => {\n  const [state, dispatch] = useTypeFilter();\n  useEffect(() => {}, [state, dispatch]);\n  console.log(shortId);\n  return __jsx(Layout, {\n    state: state,\n    dispatch: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Currently browsing \", state.mainType), state.isLoading && __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Loading...\"), state.typeArr.map(x => __jsx(Item, {\n    name: !x.title ? x.name : x.title,\n    key: x.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n};\n\nLanding.getInitialProps = async ctx => {\n  const {\n    shortId\n  } = ctx.query;\n  return {\n    shortId\n  };\n};\n\nexport default withData(Landing);","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx"],"names":["React","useEffect","useTypeFilter","withData","Layout","Item","Landing","shortId","state","dispatch","console","log","mainType","isLoading","typeArr","map","x","title","name","id","getInitialProps","ctx","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,SAApB,QAAqC,OAArC;AAGA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,OAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,aAAa,EAAvC;AAEAD,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACO,KAAD,EAAQC,QAAR,CAAX,CAAT;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,KAAf;AAAsB,IAAA,QAAQ,EAAEC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBD,KAAK,CAACI,QAA9B,CADF,EAEGJ,KAAK,CAACK,SAAN,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFtB,EAGGL,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkBC,CAAC,IAClB,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,CAACA,CAAC,CAACC,KAAH,GAAWD,CAAC,CAACE,IAAb,GAAoBF,CAAC,CAACC,KAAlC;AAAyC,IAAA,GAAG,EAAED,CAAC,CAACG,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAHH,CADF;AASD,CAhBD;;AAkBAb,OAAO,CAACc,eAAR,GAA0B,MAAMC,GAAN,IAAa;AACrC,QAAM;AAAEd,IAAAA;AAAF,MAAcc,GAAG,CAACC,KAAxB;AACA,SAAO;AAAEf,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeJ,QAAQ,CAACG,OAAD,CAAvB","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { GetProps } from \"../interfaces/GetProps\";\n\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport withData from \"../HOC/withData\";\nimport Layout from \"../components/layouts/layout\";\nimport Item from \"../components/item\";\n\nconst Landing: GetProps<any> = ({ shortId }) => {\n  const [state, dispatch] = useTypeFilter();\n\n  useEffect(() => {}, [state, dispatch]);\n\n  console.log(shortId);\n\n  return (\n    <Layout state={state} dispatch={dispatch}>\n      <h1>Currently browsing {state.mainType}</h1>\n      {state.isLoading && <h2>Loading...</h2>}\n      {state.typeArr.map(x => (\n        <Item name={!x.title ? x.name : x.title} key={x.id} />\n      ))}\n    </Layout>\n  );\n};\n\nLanding.getInitialProps = async ctx => {\n  const { shortId } = ctx.query;\n  return { shortId };\n};\n\nexport default withData(Landing);\n"]},"metadata":{},"sourceType":"module"}