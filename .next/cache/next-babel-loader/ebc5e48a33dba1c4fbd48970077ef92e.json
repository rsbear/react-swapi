{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    allFilms {\\n      title\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nvar TEST = gql(_templateObject());\n\nvar Landing = function Landing(props) {\n  var _useTypeFilter = useTypeFilter(),\n      _useTypeFilter2 = _slicedToArray(_useTypeFilter, 2),\n      state = _useTypeFilter2[0],\n      dispatch = _useTypeFilter2[1];\n\n  console.log(state);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n};\n\nexport default Landing;","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx"],"names":["React","gql","useTypeFilter","TEST","Landing","props","state","dispatch","console","log"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAGA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,aAAT,QAA8B,wBAA9B;AAGA,IAAMC,IAAI,GAAGF,GAAH,mBAAV;;AASA,IAAMG,OAAgB,GAAG,SAAnBA,OAAmB,CAAAC,KAAK,EAAI;AAAA,uBACNH,aAAa,EADP;AAAA;AAAA,MACzBI,KADyB;AAAA,MAClBC,QADkB;;AAGhCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CAbD;;AAeA,eAAeF,OAAf","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { withApollo } from \"../lib/apollo\";\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport { useAllFilmsQuery } from \"../generated/graphql\";\n\nconst TEST = gql`\n  query {\n    allFilms {\n      title\n      id\n    }\n  }\n`;\n\nconst Landing: FC<any> = props => {\n  const [state, dispatch] = useTypeFilter();\n\n  console.log(state);\n  return (\n    <div>\n      {/* {state.map((poke: any) => (\n        <div key={poke.id}>\n          <h1>{poke.title}</h1>\n        </div>\n      ))} */}\n    </div>\n  );\n};\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}