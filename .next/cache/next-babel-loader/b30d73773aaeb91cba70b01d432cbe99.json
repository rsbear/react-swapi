{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport withData from \"../HOC/withData\";\nimport Layout from \"../components/layouts/layout\";\n\nvar Landing = function Landing(props) {\n  var _useTypeFilter = useTypeFilter(),\n      _useTypeFilter2 = _slicedToArray(_useTypeFilter, 2),\n      state = _useTypeFilter2[0],\n      dispatch = _useTypeFilter2[1];\n\n  useEffect(function () {}, [state, dispatch]);\n  return __jsx(Layout, {\n    state: state,\n    dispatch: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Currently browsing \", state.mainType), state.isLoading && __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Loading...\"), state.typeArr.map(function (x) {\n    return __jsx(\"div\", {\n      key: x.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, !x.title ? x.name : x.title));\n  }));\n};\n\nexport default withData(Landing);","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx"],"names":["React","useEffect","useTypeFilter","withData","Layout","Landing","props","state","dispatch","mainType","isLoading","typeArr","map","x","id","title","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,QAAqC,OAArC;AAKA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,IAAMC,OAAgB,GAAG,SAAnBA,OAAmB,CAAAC,KAAK,EAAI;AAAA,uBACNJ,aAAa,EADP;AAAA;AAAA,MACzBK,KADyB;AAAA,MAClBC,QADkB;;AAGhCP,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,CAACM,KAAD,EAAQC,QAAR,CAAX,CAAT;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAED,KAAf;AAAsB,IAAA,QAAQ,EAAEC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBD,KAAK,CAACE,QAA9B,CADF,EAEGF,KAAK,CAACG,SAAN,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFtB,EAGGH,KAAK,CAACI,OAAN,CAAcC,GAAd,CAAkB,UAAAC,CAAC;AAAA,WAClB;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,CAACD,CAAC,CAACE,KAAH,GAAWF,CAAC,CAACG,IAAb,GAAoBH,CAAC,CAACE,KAA3B,CADF,CADkB;AAAA,GAAnB,CAHH,CADF;AAWD,CAhBD;;AAkBA,eAAeZ,QAAQ,CAACE,OAAD,CAAvB","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { withApollo } from \"../lib/apollo\";\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport { useAllFilmsQuery } from \"../generated/graphql\";\nimport withData from \"../HOC/withData\";\nimport Layout from \"../components/layouts/layout\";\n\nconst Landing: FC<any> = props => {\n  const [state, dispatch] = useTypeFilter();\n\n  useEffect(() => {}, [state, dispatch]);\n\n  return (\n    <Layout state={state} dispatch={dispatch}>\n      <h1>Currently browsing {state.mainType}</h1>\n      {state.isLoading && <h2>Loading...</h2>}\n      {state.typeArr.map(x => (\n        <div key={x.id}>\n          <h1>{!x.title ? x.name : x.title}</h1>\n        </div>\n      ))}\n    </Layout>\n  );\n};\n\nexport default withData(Landing);\n"]},"metadata":{},"sourceType":"module"}