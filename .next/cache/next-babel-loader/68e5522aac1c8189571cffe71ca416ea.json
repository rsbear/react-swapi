{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport withData from \"../HOC/withData\";\nimport Layout from \"../components/layouts/layout\";\nimport FilmItem from \"../components/items/FilmItem\";\nimport PersonItem from \"../components/items/PersonItem\";\nimport StarshipItem from \"../components/items/StarshipItem\";\n\nvar Landing = function Landing(_ref) {\n  var shortId = _ref.shortId;\n\n  var _useTypeFilter = useTypeFilter(),\n      _useTypeFilter2 = _slicedToArray(_useTypeFilter, 2),\n      state = _useTypeFilter2[0],\n      dispatch = _useTypeFilter2[1];\n\n  useEffect(function () {}, [state, dispatch]);\n  console.log(shortId);\n  return __jsx(Layout, {\n    state: state,\n    dispatch: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Currently browsing \", state.mainType), state.isLoading && __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Loading...\"), state.mainType === \"films\" && state.typeArr.map(function (_ref2) {\n    var id = _ref2.id,\n        title = _ref2.title;\n    return __jsx(FilmItem, {\n      title: title,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }), state.mainType === \"persons\" && state.typeArr.map(function (_ref3) {\n    var id = _ref3.id,\n        name = _ref3.name;\n    return __jsx(PersonItem, {\n      name: name,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }), state.mainType === \"starships\" && state.typeArr.map(function (_ref4) {\n    var id = _ref4.id,\n        name = _ref4.name;\n    return __jsx(StarshipItem, {\n      name: name,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }));\n};\n\nLanding.getInitialProps = function _callee(ctx) {\n  var shortId;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          shortId = ctx.query.shortId;\n          return _context.abrupt(\"return\", {\n            shortId: shortId\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withData(Landing);","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx"],"names":["React","useEffect","useTypeFilter","withData","Layout","FilmItem","PersonItem","StarshipItem","Landing","shortId","state","dispatch","console","log","mainType","isLoading","typeArr","map","id","title","name","getInitialProps","ctx","query"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,QAAqC,OAArC;AAGA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,IAAMC,OAAsB,GAAG,SAAzBA,OAAyB,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,uBACpBP,aAAa,EADO;AAAA;AAAA,MACvCQ,KADuC;AAAA,MAChCC,QADgC;;AAG9CV,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,CAACS,KAAD,EAAQC,QAAR,CAAX,CAAT;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,KAAf;AAAsB,IAAA,QAAQ,EAAEC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBD,KAAK,CAACI,QAA9B,CADF,EAEGJ,KAAK,CAACK,SAAN,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFtB,EAGGL,KAAK,CAACI,QAAN,KAAmB,OAAnB,IACCJ,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkB;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,KAAP,SAAOA,KAAP;AAAA,WAChB,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAjB;AAAwB,MAAA,GAAG,EAAED,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAAlB,CAJJ,EAOGR,KAAK,CAACI,QAAN,KAAmB,SAAnB,IACCJ,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkB;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOE,IAAP,SAAOA,IAAP;AAAA,WAChB,MAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,IAAlB;AAAwB,MAAA,GAAG,EAAEF,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAAlB,CARJ,EAWGR,KAAK,CAACI,QAAN,KAAmB,WAAnB,IACCJ,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkB;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOE,IAAP,SAAOA,IAAP;AAAA,WAChB,MAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,IAApB;AAA0B,MAAA,GAAG,EAAEF,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAAlB,CAZJ,CADF;AAkBD,CAzBD;;AA2BAV,OAAO,CAACa,eAAR,GAA0B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBb,UAAAA,OADgB,GACJa,GAAG,CAACC,KADA,CAChBd,OADgB;AAAA,2CAEjB;AAAEA,YAAAA,OAAO,EAAPA;AAAF,WAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAKA,eAAeN,QAAQ,CAACK,OAAD,CAAvB","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { GetProps } from \"../interfaces/GetProps\";\n\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport withData from \"../HOC/withData\";\nimport Layout from \"../components/layouts/layout\";\nimport FilmItem from \"../components/items/FilmItem\";\nimport PersonItem from \"../components/items/PersonItem\";\nimport StarshipItem from \"../components/items/StarshipItem\";\n\nconst Landing: GetProps<any> = ({ shortId }) => {\n  const [state, dispatch] = useTypeFilter();\n\n  useEffect(() => {}, [state, dispatch]);\n\n  console.log(shortId);\n\n  return (\n    <Layout state={state} dispatch={dispatch}>\n      <h1>Currently browsing {state.mainType}</h1>\n      {state.isLoading && <h2>Loading...</h2>}\n      {state.mainType === \"films\" &&\n        state.typeArr.map(({ id, title }: any) => (\n          <FilmItem title={title} key={id} />\n        ))}\n      {state.mainType === \"persons\" &&\n        state.typeArr.map(({ id, name }: any) => (\n          <PersonItem name={name} key={id} />\n        ))}\n      {state.mainType === \"starships\" &&\n        state.typeArr.map(({ id, name }: any) => (\n          <StarshipItem name={name} key={id} />\n        ))}\n    </Layout>\n  );\n};\n\nLanding.getInitialProps = async ctx => {\n  const { shortId } = ctx.query;\n  return { shortId };\n};\n\nexport default withData(Landing);\n"]},"metadata":{},"sourceType":"module"}