{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport withData from \"../HOC/withData\";\nimport Layout from \"../components/layouts/layout\";\nimport Item from \"../components/item\";\n\nvar Landing = function Landing(_ref) {\n  var shortId = _ref.shortId;\n\n  var _useTypeFilter = useTypeFilter(),\n      _useTypeFilter2 = _slicedToArray(_useTypeFilter, 2),\n      state = _useTypeFilter2[0],\n      dispatch = _useTypeFilter2[1];\n\n  useEffect(function () {}, [state, dispatch]);\n  console.log(shortId);\n  return __jsx(Layout, {\n    state: state,\n    dispatch: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Currently browsing \", state.mainType), state.isLoading && __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Loading...\"), state.typeArr.map(function (x) {\n    return __jsx(Item, {\n      name: !x.title ? x.name : x.title,\n      key: x.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }));\n};\n\nLanding.getInitialProps = function (ctx) {\n  var _yes = \"yes\",\n      shortId = _yes.shortId;\n  return {\n    shortId: shortId\n  };\n};\n\nexport default withData(Landing);","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx"],"names":["React","useEffect","useTypeFilter","withData","Layout","Item","Landing","shortId","state","dispatch","console","log","mainType","isLoading","typeArr","map","x","title","name","id","getInitialProps","ctx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,QAAqC,OAArC;AAKA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAGA,IAAMC,OAAsB,GAAG,SAAzBA,OAAyB,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,uBACpBL,aAAa,EADO;AAAA;AAAA,MACvCM,KADuC;AAAA,MAChCC,QADgC;;AAG9CR,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,CAACO,KAAD,EAAQC,QAAR,CAAX,CAAT;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,KAAf;AAAsB,IAAA,QAAQ,EAAEC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBD,KAAK,CAACI,QAA9B,CADF,EAEGJ,KAAK,CAACK,SAAN,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFtB,EAGGL,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkB,UAAAC,CAAC;AAAA,WAClB,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,CAACA,CAAC,CAACC,KAAH,GAAWD,CAAC,CAACE,IAAb,GAAoBF,CAAC,CAACC,KAAlC;AAAyC,MAAA,GAAG,EAAED,CAAC,CAACG,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB;AAAA,GAAnB,CAHH,CADF;AASD,CAhBD;;AAkBAb,OAAO,CAACc,eAAR,GAA0B,UAAAC,GAAG,EAAI;AAAA,aACN,KADM;AAAA,MACvBd,OADuB,QACvBA,OADuB;AAE/B,SAAO;AAAEA,IAAAA,OAAO,EAAPA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeJ,QAAQ,CAACG,OAAD,CAAvB","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { withApollo } from \"../lib/apollo\";\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport { useAllFilmsQuery } from \"../generated/graphql\";\nimport withData from \"../HOC/withData\";\nimport Layout from \"../components/layouts/layout\";\nimport Item from \"../components/item\";\nimport { GetProps } from \"../interfaces/GetProps\";\n\nconst Landing: GetProps<any> = ({ shortId }) => {\n  const [state, dispatch] = useTypeFilter();\n\n  useEffect(() => {}, [state, dispatch]);\n\n  console.log(shortId);\n\n  return (\n    <Layout state={state} dispatch={dispatch}>\n      <h1>Currently browsing {state.mainType}</h1>\n      {state.isLoading && <h2>Loading...</h2>}\n      {state.typeArr.map(x => (\n        <Item name={!x.title ? x.name : x.title} key={x.id} />\n      ))}\n    </Layout>\n  );\n};\n\nLanding.getInitialProps = ctx => {\n  const { shortId }: any = \"yes\";\n  return { shortId };\n};\n\nexport default withData(Landing);\n"]},"metadata":{},"sourceType":"module"}