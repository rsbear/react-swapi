{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch';\nexport default function createApolloClient(initialState, ctx) {\n  var fetchOptions = {};\n  var link = new HttpLink({\n    uri: 'https://graphql.org/swapi-graphql/',\n    // Server URL (must be absolute)\n    credentials: 'include',\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\"\n    },\n    fetch: fetch\n  }); // const authLink = setContext((request, { headers }) => {\n  //   return {\n  //     headers: {\n  //       ...headers,\n  //       \"Access-Control-Allow-Origin\": \"*\"\n  //     }\n  //   };\n  // });\n\n  return new ApolloClient({\n    ssrMode: Boolean(ctx),\n    link: link,\n    cache: new InMemoryCache().restore(initialState)\n  });\n}","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/lib/apolloClient.ts"],"names":["ApolloClient","InMemoryCache","HttpLink","fetch","createApolloClient","initialState","ctx","fetchOptions","link","uri","credentials","headers","ssrMode","Boolean","cache","restore"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,eAAe,SAASC,kBAAT,CAA4BC,YAA5B,EAA0CC,GAA1C,EAA+C;AAC5D,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,IAAI,GAAG,IAAIN,QAAJ,CAAa;AACxBO,IAAAA,GAAG,EAAE,oCADmB;AACmB;AAC3CC,IAAAA,WAAW,EAAE,SAFW;AAGxBC,IAAAA,OAAO,EAAE;AACP,qCAA+B;AADxB,KAHe;AAMxBR,IAAAA,KAAK,EAALA;AANwB,GAAb,CAAb,CAH4D,CAY5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO,IAAIH,YAAJ,CAAiB;AACtBY,IAAAA,OAAO,EAAEC,OAAO,CAACP,GAAD,CADM;AAEtBE,IAAAA,IAAI,EAAEA,IAFgB;AAGtBM,IAAAA,KAAK,EAAE,IAAIb,aAAJ,GAAoBc,OAApB,CAA4BV,YAA5B;AAHe,GAAjB,CAAP;AAKD","sourcesContent":["import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { setContext } from \"apollo-link-context\";\nimport fetch from 'isomorphic-unfetch'\nimport { ApolloLink } from \"apollo-link\";\n\nexport default function createApolloClient(initialState, ctx) {\n  const fetchOptions = {\n  };\n  const link = new HttpLink({\n    uri: 'https://graphql.org/swapi-graphql/', // Server URL (must be absolute)\n    credentials: 'include',\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\"\n    },\n    fetch\n  })\n\n  // const authLink = setContext((request, { headers }) => {\n  //   return {\n  //     headers: {\n  //       ...headers,\n  //       \"Access-Control-Allow-Origin\": \"*\"\n  //     }\n  //   };\n  // });\n  return new ApolloClient({\n    ssrMode: Boolean(ctx),\n    link: link,\n    cache: new InMemoryCache().restore(initialState),\n  })\n}"]},"metadata":{},"sourceType":"module"}