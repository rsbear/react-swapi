{"ast":null,"code":"var _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport withData from \"../HOC/withData\";\nimport Layout from \"../components/layouts/layout\";\nimport FilmItem from \"../components/items/FilmItem\";\nimport PersonItem from \"../components/items/PersonItem\";\nimport StarshipItem from \"../components/items/StarshipItem\";\n\nconst Landing = ({\n  shortId\n}) => {\n  const [state, dispatch, handlers] = useTypeFilter();\n  return __jsx(Layout, {\n    state: state,\n    dispatch: dispatch,\n    handlers: handlers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Currently browsing \", state.browseType), state.isLoading && __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Loading...\"), state.browseType === \"films\" && state.mainList.map(({\n    id,\n    title,\n    characters,\n    starships\n  }) => __jsx(FilmItem, {\n    title: title,\n    characters: characters,\n    starships: starships,\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), state.browseType === \"persons\" && state.mainList.map(({\n    id,\n    name,\n    films\n  }) => __jsx(PersonItem, {\n    name: name,\n    films: films,\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), state.browseType === \"starships\" && state.mainList.map(({\n    id,\n    name\n  }) => __jsx(StarshipItem, {\n    name: name,\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};\n\nLanding.getInitialProps = async ctx => {\n  const {\n    shortId\n  } = ctx.query;\n  return {\n    shortId\n  };\n};\n\nexport default withData(Landing);","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx"],"names":["React","useTypeFilter","withData","Layout","FilmItem","PersonItem","StarshipItem","Landing","shortId","state","dispatch","handlers","browseType","isLoading","mainList","map","id","title","characters","starships","name","films","getInitialProps","ctx","query"],"mappings":";;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAIA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,MAAMC,OAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,IAA8BV,aAAa,EAAjD;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEQ,KAAf;AAAsB,IAAA,QAAQ,EAAEC,QAAhC;AAA0C,IAAA,QAAQ,EAAEC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBF,KAAK,CAACG,UAA9B,CADF,EAEGH,KAAK,CAACI,SAAN,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFtB,EAGGJ,KAAK,CAACG,UAAN,KAAqB,OAArB,IACCH,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAmB,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,GAAD,KACjB,MAAC,QAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,UAAU,EAAEC,UAFd;AAGE,IAAA,SAAS,EAAEC,SAHb;AAIE,IAAA,GAAG,EAAEH,EAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJJ,EAYGP,KAAK,CAACG,UAAN,KAAqB,SAArB,IACCH,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAmB,CAAC;AAAEC,IAAAA,EAAF;AAAMI,IAAAA,IAAN;AAAYC,IAAAA;AAAZ,GAAD,KACjB,MAAC,UAAD;AAAY,IAAA,IAAI,EAAED,IAAlB;AAAwB,IAAA,KAAK,EAAEC,KAA/B;AAAsC,IAAA,GAAG,EAAEL,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbJ,EAgBGP,KAAK,CAACG,UAAN,KAAqB,WAArB,IACCH,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAmB,CAAC;AAAEC,IAAAA,EAAF;AAAMI,IAAAA;AAAN,GAAD,KACjB,MAAC,YAAD;AAAc,IAAA,IAAI,EAAEA,IAApB;AAA0B,IAAA,GAAG,EAAEJ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBJ,CADF;AAuBD,CA1BD;;AA4BAT,OAAO,CAACe,eAAR,GAA0B,MAAMC,GAAN,IAAa;AACrC,QAAM;AAAEf,IAAAA;AAAF,MAAce,GAAG,CAACC,KAAxB;AACA,SAAO;AAAEhB,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeN,QAAQ,CAACK,OAAD,CAAvB","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { GetProps } from \"../interfaces/GetProps\";\nimport { useRouter } from \"next/dist/client/router\";\n\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport withData from \"../HOC/withData\";\nimport Layout from \"../components/layouts/layout\";\nimport FilmItem from \"../components/items/FilmItem\";\nimport PersonItem from \"../components/items/PersonItem\";\nimport StarshipItem from \"../components/items/StarshipItem\";\n\nconst Landing: GetProps<any> = ({ shortId }) => {\n  const [state, dispatch, handlers] = useTypeFilter();\n\n  return (\n    <Layout state={state} dispatch={dispatch} handlers={handlers}>\n      <h1>Currently browsing {state.browseType}</h1>\n      {state.isLoading && <h2>Loading...</h2>}\n      {state.browseType === \"films\" &&\n        state.mainList.map(({ id, title, characters, starships }: any) => (\n          <FilmItem\n            title={title}\n            characters={characters}\n            starships={starships}\n            key={id}\n          />\n        ))}\n      {state.browseType === \"persons\" &&\n        state.mainList.map(({ id, name, films }: any) => (\n          <PersonItem name={name} films={films} key={id} />\n        ))}\n      {state.browseType === \"starships\" &&\n        state.mainList.map(({ id, name }: any) => (\n          <StarshipItem name={name} key={id} />\n        ))}\n    </Layout>\n  );\n};\n\nLanding.getInitialProps = async ctx => {\n  const { shortId } = ctx.query;\n  return { shortId };\n};\n\nexport default withData(Landing);\n"]},"metadata":{},"sourceType":"module"}