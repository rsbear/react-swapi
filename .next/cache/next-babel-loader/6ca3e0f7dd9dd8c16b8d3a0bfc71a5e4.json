{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withApollo } from \"./../lib/apollo\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\n\nvar Layout = function Layout(_ref) {\n  var children = _ref.children;\n\n  var _useTypeFilter = useTypeFilter(),\n      _useTypeFilter2 = _slicedToArray(_useTypeFilter, 2),\n      state = _useTypeFilter2[0],\n      dispatch = _useTypeFilter2[1];\n\n  var handleSelect = function handleSelect(value) {\n    dispatch({\n      type: \"setType\",\n      payload: value\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"SWAPI\"), __jsx(\"label\", {\n    htmlFor: \"type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Type: \\xA0\"), __jsx(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Movie\"), __jsx(\"option\", {\n    value: \"character\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Character\"), __jsx(\"option\", {\n    value: \"droid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"droid\"))), children);\n};\n\nvar Store = function Store(_ref2) {\n  var Component = _ref2.Component,\n      pageProps = _ref2.pageProps;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n};\n\nvar MyApp = function MyApp(_ref3) {\n  var Component = _ref3.Component,\n      pageProps = _ref3.pageProps,\n      apolloClient = _ref3.apolloClient;\n  return __jsx(ApolloProvider, {\n    client: apolloClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))));\n};\n\nexport default withApollo(MyApp);","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/pages/_app.tsx"],"names":["withApollo","ApolloProvider","useTypeFilter","Layout","children","state","dispatch","handleSelect","value","type","payload","Store","Component","pageProps","MyApp","apolloClient"],"mappings":";;;;;AACA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAGA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,uBACLF,aAAa,EADR;AAAA;AAAA,MACxBG,KADwB;AAAA,MACjBC,QADiB;;AAG/B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC5BF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAEF;AAA5B,KAAD,CAAR;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CAHF,CADF,EAUGJ,QAVH,CADF;AAcD,CArBD;;AAsBA,IAAMO,KAAc,GAAG,SAAjBA,KAAiB,QAA8B;AAAA,MAA3BC,SAA2B,SAA3BA,SAA2B;AAAA,MAAhBC,SAAgB,SAAhBA,SAAgB;AACnD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,CAND;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ,QAA4C;AAAA,MAAzCF,SAAyC,SAAzCA,SAAyC;AAAA,MAA9BC,SAA8B,SAA9BA,SAA8B;AAAA,MAAnBE,YAAmB,SAAnBA,YAAmB;AACxD,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,CADF;AAQD,CATD;;AAWA,eAAeb,UAAU,CAACc,KAAD,CAAzB","sourcesContent":["import App from \"next/app\";\nimport { withApollo } from \"./../lib/apollo\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { FC, useState, useEffect } from \"react\";\nimport { useAllFilmsQuery } from \"../generated/graphql\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\n\nconst Layout = ({ children }) => {\n  const [state, dispatch] = useTypeFilter();\n\n  const handleSelect = value => {\n    dispatch({ type: \"setType\", payload: value });\n  };\n\n  return (\n    <div className=\"layout\">\n      <nav>\n        <h3>SWAPI</h3>\n        <label htmlFor=\"type\">Type: &nbsp;</label>\n        <select>\n          <option value=\"movie\">Movie</option>\n          <option value=\"character\">Character</option>\n          <option value=\"droid\">droid</option>\n        </select>\n      </nav>\n      {children}\n    </div>\n  );\n};\nconst Store: FC<any> = ({ Component, pageProps }) => {\n  return (\n    <Layout>\n      <Component {...pageProps} />\n    </Layout>\n  );\n};\n\nconst MyApp = ({ Component, pageProps, apolloClient }) => {\n  return (\n    <ApolloProvider client={apolloClient}>\n      {/* <Store Component={Component} pageProps={pageProps} /> */}\n      <Layout>\n        <Component {...pageProps} />\n      </Layout>\n    </ApolloProvider>\n  );\n};\n\nexport default withApollo(MyApp);\n"]},"metadata":{},"sourceType":"module"}