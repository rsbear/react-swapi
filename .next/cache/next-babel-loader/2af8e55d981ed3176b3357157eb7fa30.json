{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport withData from \"../HOC/withData\";\nimport Layout from \"../components/layouts/layout\";\nimport FilmItem from \"../components/items/FilmItem\";\nimport PersonItem from \"../components/items/PersonItem\";\nimport StarshipItem from \"../components/items/StarshipItem\";\n\nvar Landing = function Landing(_ref) {\n  var shortId = _ref.shortId;\n\n  var _useTypeFilter = useTypeFilter(),\n      _useTypeFilter2 = _slicedToArray(_useTypeFilter, 2),\n      state = _useTypeFilter2[0],\n      dispatch = _useTypeFilter2[1];\n\n  return __jsx(Layout, {\n    state: state,\n    dispatch: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Currently browsing \", state.mainType), state.isLoading && __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Loading...\"), state.mainType === \"films\" && state.list.map(function (_ref2) {\n    var id = _ref2.id,\n        title = _ref2.title,\n        characters = _ref2.characters,\n        starships = _ref2.starships;\n    return __jsx(FilmItem, {\n      title: title,\n      characters: characters,\n      starships: starships,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }), state.mainType === \"persons\" && state.list.map(function (_ref3) {\n    var id = _ref3.id,\n        name = _ref3.name;\n    return __jsx(PersonItem, {\n      name: name,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }), state.mainType === \"starships\" && state.list.map(function (_ref4) {\n    var id = _ref4.id,\n        name = _ref4.name;\n    return __jsx(StarshipItem, {\n      name: name,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }));\n};\n\nLanding.getInitialProps = function _callee(ctx) {\n  var shortId;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          shortId = ctx.query.shortId;\n          return _context.abrupt(\"return\", {\n            shortId: shortId\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withData(Landing);","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx"],"names":["React","useTypeFilter","withData","Layout","FilmItem","PersonItem","StarshipItem","Landing","shortId","state","dispatch","mainType","isLoading","list","map","id","title","characters","starships","name","getInitialProps","ctx","query"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAGA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,IAAMC,OAAsB,GAAG,SAAzBA,OAAyB,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,uBACpBP,aAAa,EADO;AAAA;AAAA,MACvCQ,KADuC;AAAA,MAChCC,QADgC;;AAG9C,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAED,KAAf;AAAsB,IAAA,QAAQ,EAAEC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBD,KAAK,CAACE,QAA9B,CADF,EAEGF,KAAK,CAACG,SAAN,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFtB,EAGGH,KAAK,CAACE,QAAN,KAAmB,OAAnB,IACCF,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAe;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,KAAP,SAAOA,KAAP;AAAA,QAAcC,UAAd,SAAcA,UAAd;AAAA,QAA0BC,SAA1B,SAA0BA,SAA1B;AAAA,WACb,MAAC,QAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,UAAU,EAAEC,UAFd;AAGE,MAAA,SAAS,EAAEC,SAHb;AAIE,MAAA,GAAG,EAAEH,EAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAf,CAJJ,EAYGN,KAAK,CAACE,QAAN,KAAmB,SAAnB,IACCF,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAe;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOI,IAAP,SAAOA,IAAP;AAAA,WACb,MAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,IAAlB;AAAwB,MAAA,GAAG,EAAEJ,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAf,CAbJ,EAgBGN,KAAK,CAACE,QAAN,KAAmB,WAAnB,IACCF,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAe;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOI,IAAP,SAAOA,IAAP;AAAA,WACb,MAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,IAApB;AAA0B,MAAA,GAAG,EAAEJ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAf,CAjBJ,CADF;AAuBD,CA1BD;;AA4BAR,OAAO,CAACa,eAAR,GAA0B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBb,UAAAA,OADgB,GACJa,GAAG,CAACC,KADA,CAChBd,OADgB;AAAA,2CAEjB;AAAEA,YAAAA,OAAO,EAAPA;AAAF,WAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAKA,eAAeN,QAAQ,CAACK,OAAD,CAAvB","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { GetProps } from \"../interfaces/GetProps\";\n\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport withData from \"../HOC/withData\";\nimport Layout from \"../components/layouts/layout\";\nimport FilmItem from \"../components/items/FilmItem\";\nimport PersonItem from \"../components/items/PersonItem\";\nimport StarshipItem from \"../components/items/StarshipItem\";\n\nconst Landing: GetProps<any> = ({ shortId }) => {\n  const [state, dispatch] = useTypeFilter();\n\n  return (\n    <Layout state={state} dispatch={dispatch}>\n      <h1>Currently browsing {state.mainType}</h1>\n      {state.isLoading && <h2>Loading...</h2>}\n      {state.mainType === \"films\" &&\n        state.list.map(({ id, title, characters, starships }: any) => (\n          <FilmItem\n            title={title}\n            characters={characters}\n            starships={starships}\n            key={id}\n          />\n        ))}\n      {state.mainType === \"persons\" &&\n        state.list.map(({ id, name }: any) => (\n          <PersonItem name={name} key={id} />\n        ))}\n      {state.mainType === \"starships\" &&\n        state.list.map(({ id, name }: any) => (\n          <StarshipItem name={name} key={id} />\n        ))}\n    </Layout>\n  );\n};\n\nLanding.getInitialProps = async ctx => {\n  const { shortId } = ctx.query;\n  return { shortId };\n};\n\nexport default withData(Landing);\n"]},"metadata":{},"sourceType":"module"}