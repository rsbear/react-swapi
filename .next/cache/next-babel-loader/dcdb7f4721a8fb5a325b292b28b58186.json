{"ast":null,"code":"var _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport withData from \"../HOC/withData\";\n\nvar Landing = function Landing(props) {\n  console.log(props);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n};\n\nexport default withData(Landing);","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx"],"names":["React","withData","Landing","props","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAOA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,IAAMC,OAAgB,GAAG,SAAnBA,OAAmB,CAAAC,KAAK,EAAI;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CAdD;;AAgBA,eAAeF,QAAQ,CAACC,OAAD,CAAvB","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { withApollo } from \"../lib/apollo\";\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport { useAllFilmsQuery } from \"../generated/graphql\";\nimport withData from \"../HOC/withData\";\n\nconst Landing: FC<any> = props => {\n  console.log(props);\n\n  return (\n    <div>\n      {/* <h1>Currently browsing {state.mainType}</h1>\n      {state.isLoading && <h2>Loading...</h2>}\n      {state.typeArr.map(x => (\n        <div key={x.id}>\n          <h1>{!x.title ? x.name : x.title}</h1>\n        </div>\n      ))} */}\n    </div>\n  );\n};\n\nexport default withData(Landing);\n"]},"metadata":{},"sourceType":"module"}