{"ast":null,"code":"var _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\nimport { withData } from \"../hoc/withData\";\nconst TEST = gql`\n  query {\n    allFilms {\n      title\n      id\n    }\n  }\n`;\n\nconst Landing = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(TEST);\n  if (loading) return __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"loading\");\n  if (error) return __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"error\");\n  console.log(data);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, data.allFilms.map(poke => __jsx(\"div\", {\n    key: poke.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, poke.title))));\n};\n\nexport default withData(Landing);","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx"],"names":["React","gql","useQuery","withData","TEST","Landing","loading","error","data","console","log","allFilms","map","poke","id","title"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAGA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,MAAMC,IAAI,GAAGH,GAAI;;;;;;;CAAjB;;AASA,MAAMI,OAAgB,GAAG,MAAM;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,IAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAmBC,IAAD,IACjB;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,KAAV,CADF,CADD,CADH,CADF;AASD,CAhBD;;AAkBA,eAAeZ,QAAQ,CAACE,OAAD,CAAvB","sourcesContent":["import React, { FC } from \"react\";\nimport { withApollo } from \"../lib/apollo\";\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\nimport { withData } from \"../hoc/withData\";\n\nconst TEST = gql`\n  query {\n    allFilms {\n      title\n      id\n    }\n  }\n`;\n\nconst Landing: FC<any> = () => {\n  const { loading, error, data } = useQuery(TEST);\n\n  if (loading) return <h2>loading</h2>;\n  if (error) return <h2>error</h2>;\n  console.log(data);\n\n  return (\n    <div>\n      {data.allFilms.map((poke: any) => (\n        <div key={poke.id}>\n          <h1>{poke.title}</h1>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default withData(Landing);\n"]},"metadata":{},"sourceType":"module"}