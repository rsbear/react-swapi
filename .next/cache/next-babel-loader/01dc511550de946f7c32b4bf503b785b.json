{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch';\nexport default function createApolloClient(initialState, ctx) {\n  const fetchOptions = {\n    \"Access-Control-Allow-Origin\": \"*\"\n  };\n  const link = new HttpLink({\n    uri: 'http://localhost:8080/graphiql',\n    // Server URL (must be absolute)\n    fetchOptions,\n    fetch\n  }); // const authLink = setContext((request, { headers }) => {\n  //   return {\n  //     headers: {\n  //       ...headers,\n  //       \"Access-Control-Allow-Origin\": \"*\"\n  //     }\n  //   };\n  // });\n\n  return new ApolloClient({\n    ssrMode: Boolean(ctx),\n    // link: link.concat(authLink),\n    link: link,\n    cache: new InMemoryCache().restore(initialState)\n  });\n}","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/lib/apolloClient.ts"],"names":["ApolloClient","InMemoryCache","HttpLink","fetch","createApolloClient","initialState","ctx","fetchOptions","link","uri","ssrMode","Boolean","cache","restore"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,eAAe,SAASC,kBAAT,CAA4BC,YAA5B,EAA0CC,GAA1C,EAA+C;AAC5D,QAAMC,YAAY,GAAG;AACnB,mCAA+B;AADZ,GAArB;AAGA,QAAMC,IAAI,GAAG,IAAIN,QAAJ,CAAa;AACxBO,IAAAA,GAAG,EAAE,gCADmB;AACe;AACvCF,IAAAA,YAFwB;AAGxBJ,IAAAA;AAHwB,GAAb,CAAb,CAJ4D,CAU5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO,IAAIH,YAAJ,CAAiB;AACtBU,IAAAA,OAAO,EAAEC,OAAO,CAACL,GAAD,CADM;AAEtB;AACAE,IAAAA,IAAI,EAAEA,IAHgB;AAItBI,IAAAA,KAAK,EAAE,IAAIX,aAAJ,GAAoBY,OAApB,CAA4BR,YAA5B;AAJe,GAAjB,CAAP;AAMD","sourcesContent":["import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { setContext } from \"apollo-link-context\";\nimport fetch from 'isomorphic-unfetch'\nimport { ApolloLink } from \"apollo-link\";\n\nexport default function createApolloClient(initialState, ctx) {\n  const fetchOptions = {\n    \"Access-Control-Allow-Origin\": \"*\"\n  };\n  const link = new HttpLink({\n    uri: 'http://localhost:8080/graphiql', // Server URL (must be absolute)\n    fetchOptions,\n    fetch\n  })\n\n  // const authLink = setContext((request, { headers }) => {\n  //   return {\n  //     headers: {\n  //       ...headers,\n  //       \"Access-Control-Allow-Origin\": \"*\"\n  //     }\n  //   };\n  // });\n  return new ApolloClient({\n    ssrMode: Boolean(ctx),\n    // link: link.concat(authLink),\n    link: link,\n    cache: new InMemoryCache().restore(initialState),\n  })\n}"]},"metadata":{},"sourceType":"module"}