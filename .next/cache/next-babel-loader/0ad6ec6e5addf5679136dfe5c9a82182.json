{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/HOC/withData.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useReducer, useEffect, useState } from \"react\";\nimport { useAllFilmsQuery } from \"../generated/graphql\";\nvar initState = {\n  filterByCharacter: \"\",\n  filterByDroid: \"\",\n  allFilms: [],\n  filtered: []\n};\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"all\":\n      return _objectSpread({}, state, {\n        allFilms: [].concat(_toConsumableArray(state.allFilms), [action.payload])\n      });\n  }\n};\n\nvar withData = function withData(Page) {\n  return function (props) {\n    console.log(props);\n    return function () {\n      var _useState = useState([]),\n          filtered = _useState[0],\n          setFiltered = _useState[1];\n\n      var _useReducer = useReducer(reducer, initState),\n          state = _useReducer[0],\n          dispatch = _useReducer[1];\n\n      var movies = useAllFilmsQuery();\n      useEffect(function () {\n        if (!movies.loading && !movies.error && movies.data) {\n          dispatch({\n            type: \"all\",\n            payload: movies.data.allFilms\n          });\n        }\n      }, [movies.loading]);\n      return __jsx(Page, _extends({}, state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    };\n  };\n};\n\nexport default withData; // const translateProps = (props) => {\n//   let _styles = {...commonStyles.default}\n//   if(props.disable){\n//       _styles = {..._styles, ...commonStyles.disable};\n//   }\n//   const newProps = {...props,styles:_styles }\n//   return newProps;\n// }\n// const withData: FC<any> = (WrappedComponent: any) => {\n//   return function wrappedRender(args) {\n//       return WrappedComponent(translateProps(args));\n//   }\n// }\n// export const withData","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/HOC/withData.tsx"],"names":["useReducer","useEffect","useState","useAllFilmsQuery","initState","filterByCharacter","filterByDroid","allFilms","filtered","reducer","state","action","type","payload","withData","Page","props","console","log","setFiltered","dispatch","movies","loading","error","data"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAaA,UAAb,EAAyBC,SAAzB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,iBAAiB,EAAE,EADH;AAEhBC,EAAAA,aAAa,EAAE,EAFC;AAGhBC,EAAAA,QAAQ,EAAE,EAHM;AAIhBC,EAAAA,QAAQ,EAAE;AAJM,CAAlB;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,+BAAYF,KAAZ;AAAmBH,QAAAA,QAAQ,+BAAMG,KAAK,CAACH,QAAZ,IAAsBI,MAAM,CAACE,OAA7B;AAA3B;AAFJ;AAID,CALD;;AAOA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA,SAAe,UAAAC,KAAK,EAAI;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,YAAW;AAAA,sBACgBd,QAAQ,CAAC,EAAD,CADxB;AAAA,UACTM,QADS;AAAA,UACCW,WADD;;AAAA,wBAEUnB,UAAU,CAACS,OAAD,EAAUL,SAAV,CAFpB;AAAA,UAETM,KAFS;AAAA,UAEFU,QAFE;;AAGhB,UAAMC,MAAM,GAAGlB,gBAAgB,EAA/B;AAEAF,MAAAA,SAAS,CAAC,YAAM;AACd,YAAI,CAACoB,MAAM,CAACC,OAAR,IAAmB,CAACD,MAAM,CAACE,KAA3B,IAAoCF,MAAM,CAACG,IAA/C,EAAqD;AACnDJ,UAAAA,QAAQ,CAAC;AAAER,YAAAA,IAAI,EAAE,KAAR;AAAeC,YAAAA,OAAO,EAAEQ,MAAM,CAACG,IAAP,CAAYjB;AAApC,WAAD,CAAR;AACD;AACF,OAJQ,EAIN,CAACc,MAAM,CAACC,OAAR,CAJM,CAAT;AAMA,aAAO,MAAC,IAAD,eAAUZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAZD;AAaD,GAfgB;AAAA,CAAjB;;AAiBA,eAAeI,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { FC, useReducer, useEffect, useState } from \"react\";\nimport { useAllFilmsQuery } from \"../generated/graphql\";\n\nconst initState = {\n  filterByCharacter: \"\",\n  filterByDroid: \"\",\n  allFilms: [],\n  filtered: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"all\":\n      return { ...state, allFilms: [...state.allFilms, action.payload] };\n  }\n};\n\nconst withData = (Page: any) => props => {\n  console.log(props);\n  return function() {\n    const [filtered, setFiltered] = useState([]);\n    const [state, dispatch] = useReducer(reducer, initState);\n    const movies = useAllFilmsQuery();\n\n    useEffect(() => {\n      if (!movies.loading && !movies.error && movies.data) {\n        dispatch({ type: \"all\", payload: movies.data.allFilms });\n      }\n    }, [movies.loading]);\n\n    return <Page {...state} />;\n  };\n};\n\nexport default withData;\n\n// const translateProps = (props) => {\n//   let _styles = {...commonStyles.default}\n//   if(props.disable){\n//       _styles = {..._styles, ...commonStyles.disable};\n//   }\n//   const newProps = {...props,styles:_styles }\n//   return newProps;\n// }\n\n// const withData: FC<any> = (WrappedComponent: any) => {\n//   return function wrappedRender(args) {\n//       return WrappedComponent(translateProps(args));\n//   }\n// }\n\n// export const withData\n"]},"metadata":{},"sourceType":"module"}