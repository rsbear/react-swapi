{"ast":null,"code":"var _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { withApollo } from \"./../lib/apollo\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport Layout from \"./../components/layouts/layout\";\n\nconst MyApp = ({\n  Component,\n  pageProps,\n  apolloClient\n}) => {\n  return __jsx(ApolloProvider, {\n    client: apolloClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }))));\n};\n\nexport default withApollo(MyApp);","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/pages/_app.tsx"],"names":["withApollo","ApolloProvider","Layout","MyApp","Component","pageProps","apolloClient"],"mappings":";;;;;;AACA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAKA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAA4C;AACxD,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD,CARD;;AAUA,eAAeL,UAAU,CAACG,KAAD,CAAzB","sourcesContent":["import App from \"next/app\";\nimport { withApollo } from \"./../lib/apollo\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport Layout from \"./../components/layouts/layout\";\nimport { FC, useState, useEffect } from \"react\";\nimport { useAllFilmsQuery } from \"../generated/graphql\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\n\nconst MyApp = ({ Component, pageProps, apolloClient }) => {\n  return (\n    <ApolloProvider client={apolloClient}>\n      <Layout>\n        <Component {...pageProps} />\n      </Layout>\n    </ApolloProvider>\n  );\n};\n\nexport default withApollo(MyApp);\n"]},"metadata":{},"sourceType":"module"}