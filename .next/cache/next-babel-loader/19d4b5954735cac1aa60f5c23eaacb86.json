{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\n\nvar Landing = function Landing(props) {\n  var _useTypeFilter = useTypeFilter(),\n      _useTypeFilter2 = _slicedToArray(_useTypeFilter, 2),\n      state = _useTypeFilter2[0],\n      dispatch = _useTypeFilter2[1];\n\n  console.log(state.typeArr);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Currently browsing \", state.mainType), state.typeArr.map(function (x) {\n    __jsx(\"h1\", {\n      key: x.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"yes\");\n  }));\n};\n\nexport default Landing;","map":{"version":3,"sources":["/Users/rsbear/dev/swapiplayground/webapp/pages/index.tsx"],"names":["React","useTypeFilter","Landing","props","state","dispatch","console","log","typeArr","mainType","map","x","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAKA,SAASC,aAAT,QAA8B,wBAA9B;;AAGA,IAAMC,OAAgB,GAAG,SAAnBA,OAAmB,CAAAC,KAAK,EAAI;AAAA,uBACNF,aAAa,EADP;AAAA;AAAA,MACzBG,KADyB;AAAA,MAClBC,QADkB;;AAGhCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,OAAlB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBJ,KAAK,CAACK,QAA9B,CADF,EAEGL,KAAK,CAACI,OAAN,CAAcE,GAAd,CAAkB,UAAAC,CAAC,EAAI;AACtB;AAAI,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAFA,CAFH,CADF;AAQD,CAZD;;AAcA,eAAeV,OAAf","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { withApollo } from \"../lib/apollo\";\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\nimport { useTypeFilter } from \"../hooks/useTypeFilter\";\nimport { useAllFilmsQuery } from \"../generated/graphql\";\n\nconst Landing: FC<any> = props => {\n  const [state, dispatch] = useTypeFilter();\n\n  console.log(state.typeArr);\n  return (\n    <div>\n      <h1>Currently browsing {state.mainType}</h1>\n      {state.typeArr.map(x => {\n        <h1 key={x.id}>yes</h1>;\n      })}\n    </div>\n  );\n};\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}